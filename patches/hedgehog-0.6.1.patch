diff -ru hedgehog-0.6.1.orig/src/Hedgehog/Internal/Property.hs hedgehog-0.6.1/src/Hedgehog/Internal/Property.hs
--- hedgehog-0.6.1.orig/src/Hedgehog/Internal/Property.hs	2018-09-22 03:47:12.000000000 -0400
+++ hedgehog-0.6.1/src/Hedgehog/Internal/Property.hs	2019-03-16 08:21:46.347681765 -0400
@@ -1,5 +1,6 @@
 {-# OPTIONS_HADDOCK not-home #-}
 {-# LANGUAGE BangPatterns #-}
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE DeriveFunctor #-}
 {-# LANGUAGE DoAndIfThenElse #-}
 {-# LANGUAGE FlexibleContexts #-}
@@ -84,6 +85,7 @@
 import           Control.Monad.Catch (MonadThrow(..), MonadCatch(..))
 import           Control.Monad.Catch (SomeException(..), displayException)
 import           Control.Monad.Error.Class (MonadError(..))
+import qualified Control.Monad.Fail as Fail
 import           Control.Monad.IO.Class (MonadIO(..))
 import           Control.Monad.Morph (MFunctor(..))
 import           Control.Monad.Primitive (PrimMonad(..))
@@ -150,6 +152,7 @@
     , MonadReader r
     , MonadState s
     , MonadError e
+    , Fail.MonadFail
     )
 
 -- | A test monad allows the assertion of expectations.
@@ -317,6 +320,11 @@
       unTest m >>=
       unTest . k
 
+#if !(MIN_VERSION_base(4,13,0))
+  fail = Fail.fail
+#endif
+
+instance Monad m => Fail.MonadFail (TestT m) where
   fail err =
     TestT . ExceptT . pure . Left $ Failure Nothing err Nothing
 
