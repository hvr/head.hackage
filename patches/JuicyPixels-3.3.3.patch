diff -ru JuicyPixels-3.3.3.orig/src/Codec/Picture/Bitmap.hs JuicyPixels-3.3.3/src/Codec/Picture/Bitmap.hs
--- JuicyPixels-3.3.3.orig/src/Codec/Picture/Bitmap.hs	2018-12-16 16:36:06.000000000 -0500
+++ JuicyPixels-3.3.3/src/Codec/Picture/Bitmap.hs	2019-03-16 08:05:10.530793764 -0400
@@ -26,6 +26,7 @@
 
 import Control.Arrow( first )
 import Control.Monad( replicateM, when, foldM_, forM_, void )
+import qualified Control.Monad.Fail as Fail
 import Control.Monad.ST ( ST, runST )
 import Data.Maybe( fromMaybe )
 import qualified Data.Vector.Storable as VS
@@ -884,7 +885,7 @@
       a          -> fail $ "Can't handle BMP file " ++ show a
 
 -- | Decode a bitfield. Will fail if the bitfield is empty.
-getBitfield :: (FiniteBits t, Integral t, Num t, Monad m) => t -> m (Bitfield t)
+getBitfield :: (FiniteBits t, Integral t, Num t, Fail.MonadFail m) => t -> m (Bitfield t)
 getBitfield 0 = fail $
   "Codec.Picture.Bitmap.getBitfield: bitfield cannot be 0"
 getBitfield w = return (makeBitfield w)
diff -ru JuicyPixels-3.3.3.orig/src/Codec/Picture/Jpg.hs JuicyPixels-3.3.3/src/Codec/Picture/Jpg.hs
--- JuicyPixels-3.3.3.orig/src/Codec/Picture/Jpg.hs	2018-12-16 16:36:06.000000000 -0500
+++ JuicyPixels-3.3.3/src/Codec/Picture/Jpg.hs	2019-03-16 08:05:34.710988437 -0400
@@ -309,7 +309,7 @@
         scanSpecifier scanCount scanSpec = do
             compMapping <- gets componentIndexMapping
             comp <- case lookup (componentSelector scanSpec) compMapping of
-                Nothing -> fail "Jpg decoding error - bad component selector in blob."
+                Nothing -> error "Jpg decoding error - bad component selector in blob."
                 Just v -> return v
             let maximumHuffmanTable = 4
                 dcIndex = min (maximumHuffmanTable - 1) 
@@ -326,7 +326,7 @@
             frameInfo <- gets currentFrame
             blobId <- gets seenBlobs                   
             case frameInfo of
-              Nothing -> fail "Jpg decoding error - no previous frame"
+              Nothing -> error "Jpg decoding error - no previous frame"
               Just v -> do
                  let compDesc = jpgComponents v !! comp
                      compCount = length $ jpgComponents v
