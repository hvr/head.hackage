From 72aa55320720c4dd2c5e0446690d78fab48eaf24 Mon Sep 17 00:00:00 2001
From: Herbert Valerio Riedel <hvr@gnu.org>
Date: Sat, 3 Jun 2017 11:28:22 +0200
Subject: [PATCH] Forward-compat with Monoid/Semigroup proposal

NB: This requires a minor version bump as a new instance for
`Semigroup` gets introduced.
---
 map-syntax.cabal       | 24 +++++++++++++++---------
 src/Data/Map/Syntax.hs | 11 +++++++----
 2 files changed, 22 insertions(+), 13 deletions(-)

diff --git a/map-syntax.cabal b/map-syntax.cabal
index 6feeed4..3f30ccf 100644
--- a/map-syntax.cabal
+++ b/map-syntax.cabal
@@ -21,7 +21,6 @@ extra-source-files:
   README.md,
   runCoverage.sh
 
-
 Library
   hs-source-dirs: src
   default-language: Haskell2010
@@ -29,18 +28,18 @@ Library
   exposed-modules:
     Data.Map.Syntax
 
-
   build-depends:
-    base                       >= 4   && < 5,
+    base                       >= 4.3 && < 5,
     containers                 >= 0.3 && < 0.6,
     mtl                        >= 2.0 && < 2.3
 
-  if impl(ghc >= 6.12.0)
-    ghc-options: -Wall -fwarn-tabs -funbox-strict-fields
-                 -fno-warn-unused-do-bind
-  else
-    ghc-options: -Wall -fwarn-tabs -funbox-strict-fields
+  ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -fno-warn-unused-do-bind
 
+  -- See https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0#base-4.9.0.0
+  if impl(ghc >= 8.0)
+    ghc-options: -Wcompat -Wnoncanonical-monad-instances -Wnoncanonical-monadfail-instances
+  else
+    build-depends: semigroups == 0.18.*
 
 source-repository head
   type:     git
@@ -56,8 +55,15 @@ Test-suite testsuite
   default-language: Haskell2010
 
   ghc-options: -Wall -fwarn-tabs
+
+  -- See https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0#base-4.9.0.0
+  if impl(ghc >= 8.0)
+    ghc-options: -Wcompat -Wnoncanonical-monad-instances -Wnoncanonical-monadfail-instances
+  else
+    build-depends: semigroups == 0.18.*
+
   build-depends:
-    base                       >= 4        && < 5,
+    base                       >= 4.3      && < 5,
     containers                 >= 0.3      && < 0.6,
     deepseq                    >= 1.3      && < 2,
     HUnit                      >= 1.2      && < 2,
diff --git a/src/Data/Map/Syntax.hs b/src/Data/Map/Syntax.hs
index fc746b9..7b22956 100644
--- a/src/Data/Map/Syntax.hs
+++ b/src/Data/Map/Syntax.hs
@@ -52,8 +52,8 @@ import qualified Data.Map            as M
 
 #if !MIN_VERSION_base(4,8,0)
 import           Control.Applicative
-import           Data.Monoid
 #endif
+import           Data.Semigroup
 ------------------------------------------------------------------------------
 
 
@@ -92,10 +92,13 @@ newtype MapSyntaxM k v a = MapSyntaxM { unMapSyntax :: State (MapRep k v) a }
 
 
 ------------------------------------------------------------------------------
-instance Monoid (MapSyntax k v) where
-  mempty = return $! ()
-  mappend = (>>)
 
+instance Semigroup (MapSyntax k v) where
+  (<>) = (>>)
+
+instance Monoid (MapSyntax k v) where
+  mempty = pure $! ()
+  mappend = (<>)
 
 ------------------------------------------------------------------------------
 -- | Convenient type alias that will probably be used most of the time.
