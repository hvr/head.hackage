diff -ru tls-1.4.1.orig/Network/TLS/Handshake/Key.hs tls-1.4.1/Network/TLS/Handshake/Key.hs
--- tls-1.4.1.orig/Network/TLS/Handshake/Key.hs	2017-12-17 09:13:58.000000000 -0500
+++ tls-1.4.1/Network/TLS/Handshake/Key.hs	2019-03-16 09:40:09.391118702 -0400
@@ -37,7 +37,7 @@
     usingState_ ctx $ do
         v <- withRNG $ kxEncrypt publicKey content
         case v of
-            Left err       -> fail ("rsa encrypt failed: " ++ show err)
+            Left err       -> error ("rsa encrypt failed: " ++ show err)
             Right econtent -> return econtent
 
 signPrivate :: Context -> Role -> SignatureParams -> ByteString -> IO ByteString
@@ -46,7 +46,7 @@
     usingState_ ctx $ do
         r <- withRNG $ kxSign privateKey params content
         case r of
-            Left err       -> fail ("sign failed: " ++ show err)
+            Left err       -> error ("sign failed: " ++ show err)
             Right econtent -> return econtent
 
 decryptRSA :: Context -> ByteString -> IO (Either KxError ByteString)
diff -ru tls-1.4.1.orig/Network/TLS/Packet.hs tls-1.4.1/Network/TLS/Packet.hs
--- tls-1.4.1.orig/Network/TLS/Packet.hs	2018-02-13 09:38:44.000000000 -0500
+++ tls-1.4.1/Network/TLS/Packet.hs	2019-03-16 09:39:48.134953925 -0400
@@ -74,6 +74,7 @@
 import qualified Data.ByteString.Char8 as BC
 import           Data.ByteArray (ByteArrayAccess)
 import qualified Data.ByteArray as B (convert)
+import qualified Control.Monad.Fail as Fail
 
 data CurrentParams = CurrentParams
     { cParamsVersion     :: Version                     -- ^ current protocol version
@@ -644,6 +645,6 @@
 encodeSignedECDHParams dhparams cran sran = runPut $
     putClientRandom32 cran >> putServerRandom32 sran >> putServerECDHParams dhparams
 
-fromJustM :: Monad m => String -> Maybe a -> m a
+fromJustM :: Fail.MonadFail m => String -> Maybe a -> m a
 fromJustM what Nothing  = fail ("fromJust " ++ what ++ ": Nothing")
 fromJustM _    (Just x) = return x
