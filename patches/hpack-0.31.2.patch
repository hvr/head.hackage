commit 1b8d1bc872df52f427b1a1b0ec494bc9c4b4c333
Author: Ryan Scott <ryan.gl.scott@gmail.com>
Date:   Sat Mar 16 11:33:08 2019 -0400

    Adapt to GHC 8.8

diff --git a/src/Hpack/Config.hs b/src/Hpack/Config.hs
index 5710b49..aba76b9 100644
--- a/src/Hpack/Config.hs
+++ b/src/Hpack/Config.hs
@@ -5,6 +5,7 @@
 {-# LANGUAGE DeriveAnyClass #-}
 {-# LANGUAGE FlexibleInstances #-}
 {-# LANGUAGE LambdaCase #-}
+{-# LANGUAGE LiberalTypeSynonyms #-}
 {-# LANGUAGE OverloadedStrings #-}
 {-# LANGUAGE RecordWildCards #-}
 {-# LANGUAGE CPP #-}
diff --git a/src/Hpack/License.hs b/src/Hpack/License.hs
index d3a69cb..4786a3b 100644
--- a/src/Hpack/License.hs
+++ b/src/Hpack/License.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE DeriveFunctor #-}
 {-# LANGUAGE ViewPatterns #-}
 {-# LANGUAGE LambdaCase #-}
@@ -9,7 +10,11 @@ import           Distribution.Pretty (prettyShow)
 import           Distribution.Version (mkVersion)
 import qualified Distribution.License as Cabal
 import qualified Distribution.SPDX.License as SPDX
+#if MIN_VERSION_Cabal(2,5,0)
+import           Distribution.Parsec (eitherParsec)
+#else
 import           Distribution.Parsec.Class (eitherParsec)
+#endif
 
 import qualified Data.License.Infer as Infer
 
diff --git a/src/Hpack/Syntax/DependencyVersion.hs b/src/Hpack/Syntax/DependencyVersion.hs
index cb8abcf..84a7b05 100644
--- a/src/Hpack/Syntax/DependencyVersion.hs
+++ b/src/Hpack/Syntax/DependencyVersion.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE OverloadedStrings #-}
 {-# LANGUAGE LambdaCase #-}
 module Hpack.Syntax.DependencyVersion (
@@ -34,7 +35,12 @@ import           Text.PrettyPrint (renderStyle, Style(..), Mode(..))
 import           Distribution.Version (VersionRangeF(..))
 import qualified Distribution.Text as D
 import qualified Distribution.Version as D
+#if MIN_VERSION_Cabal(2,5,0)
+import qualified Distribution.Parsec as D
+import qualified Distribution.Pretty as D
+#else
 import qualified Distribution.Parsec.Class as D
+#endif
 
 import           Data.Aeson.Config.FromValue
 
@@ -147,7 +153,13 @@ cabalParse subject s = case D.eitherParsec s of
 versionConstraintFromCabal :: D.VersionRange -> VersionConstraint
 versionConstraintFromCabal range
   | D.isAnyVersion range = AnyVersion
-  | otherwise = VersionRange . renderStyle style . D.disp $ toPreCabal2VersionRange range
+  | otherwise = VersionRange . renderStyle style
+#if MIN_VERSION_Cabal(2,5,0)
+                             . D.pretty
+#else
+                             . D.disp
+#endif
+                             $ toPreCabal2VersionRange range
   where
     style = Style OneLineMode 0 0
 
diff --git a/test/Hpack/LicenseSpec.hs b/test/Hpack/LicenseSpec.hs
index ce6cb1a..ffb7d25 100644
--- a/test/Hpack/LicenseSpec.hs
+++ b/test/Hpack/LicenseSpec.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE QuasiQuotes #-}
 module Hpack.LicenseSpec (spec) where
 
@@ -6,7 +7,11 @@ import           Data.Maybe
 import           Data.String.Interpolate
 
 import           Distribution.Pretty (prettyShow)
+#if MIN_VERSION_Cabal(2,5,0)
+import           Distribution.Parsec (simpleParsec)
+#else
 import           Distribution.Parsec.Class (simpleParsec)
+#endif
 import qualified Distribution.License as Cabal
 
 import           Hpack.License
