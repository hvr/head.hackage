commit 470dcb77200a60701907ad958af04e5b9e18d7a3
Author: Ryan Scott <ryan.gl.scott@gmail.com>
Date:   Tue Apr 3 14:45:48 2018 -0400

    Allow building with template-haskell-2.14

diff --git a/src/Data/Singletons/Single/Monad.hs b/src/Data/Singletons/Single/Monad.hs
index 7da2a7b..b1928b2 100644
--- a/src/Data/Singletons/Single/Monad.hs
+++ b/src/Data/Singletons/Single/Monad.hs
@@ -8,7 +8,7 @@ This file defines the SgM monad and its operations, for use during singling.
 The SgM monad allows reading from a SgEnv environment and is wrapped around a Q.
 -}
 
-{-# LANGUAGE GeneralizedNewtypeDeriving, ParallelListComp, TemplateHaskell #-}
+{-# LANGUAGE GeneralizedNewtypeDeriving, ParallelListComp, TemplateHaskell, CPP #-}
 
 module Data.Singletons.Single.Monad (
   SgM, bindLets, lookupVarE, lookupConE,
@@ -72,7 +72,12 @@ instance Quasi SgM where
   qReifyConStrictness = liftSgM `comp1` qReifyConStrictness
   qIsExtEnabled       = liftSgM `comp1` qIsExtEnabled
   qExtsEnabled        = liftSgM qExtsEnabled
+#if MIN_VERSION_template_haskell(2,14,0)
+  qAddForeignFilePath = liftSgM `comp2` qAddForeignFilePath
+  qAddTempFile        = liftSgM `comp1` qAddTempFile
+#else
   qAddForeignFile     = liftSgM `comp2` qAddForeignFile
+#endif
   qAddCorePlugin      = liftSgM `comp1` qAddCorePlugin
 
   qRecover (SgM handler) (SgM body) = do
diff --git a/src/Data/Singletons/Util.hs b/src/Data/Singletons/Util.hs
index f11bc7e..1a30765 100644
--- a/src/Data/Singletons/Util.hs
+++ b/src/Data/Singletons/Util.hs
@@ -11,7 +11,7 @@ Users of the package should not need to consult this file.
              TemplateHaskell, GeneralizedNewtypeDeriving,
              MultiParamTypeClasses, StandaloneDeriving,
              UndecidableInstances, MagicHash, UnboxedTuples,
-             LambdaCase, NoMonomorphismRestriction #-}
+             LambdaCase, NoMonomorphismRestriction, CPP #-}
 
 module Data.Singletons.Util where
 
@@ -404,7 +404,12 @@ instance (Quasi q, Monoid m) => Quasi (QWithAux m q) where
   qReifyConStrictness = lift `comp1` qReifyConStrictness
   qIsExtEnabled       = lift `comp1` qIsExtEnabled
   qExtsEnabled        = lift qExtsEnabled
+#if MIN_VERSION_template_haskell(2,14,0)
+  qAddForeignFilePath = lift `comp2` qAddForeignFilePath
+  qAddTempFile        = lift `comp1` qAddTempFile
+#else
   qAddForeignFile     = lift `comp2` qAddForeignFile
+#endif
   qAddCorePlugin      = lift `comp1` qAddCorePlugin
 
   qRecover exp handler = do
