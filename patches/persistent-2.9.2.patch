diff -ru persistent-2.9.2.orig/Database/Persist/Types/Base.hs persistent-2.9.2/Database/Persist/Types/Base.hs
--- persistent-2.9.2.orig/Database/Persist/Types/Base.hs	2019-04-03 23:02:38.000000000 -0400
+++ persistent-2.9.2/Database/Persist/Types/Base.hs	2019-04-08 07:43:42.309646084 -0400
@@ -8,6 +8,7 @@
 import Control.Exception (Exception)
 import Web.PathPieces (PathPiece(..))
 import Web.HttpApiData (ToHttpApiData (..), FromHttpApiData (..), parseUrlPieceMaybe, showTextData, readTextData, parseBoundedTextData)
+import qualified Control.Monad.Fail as Fail
 import Control.Monad.Trans.Error (Error (..))
 import Data.Typeable (Typeable)
 import Data.Text (Text, pack)
@@ -400,10 +401,10 @@
     parseJSON (A.String t0) =
         case T.uncons t0 of
             Nothing -> fail "Null string"
-            Just ('p', t) -> either (fail "Invalid base64") (return . PersistDbSpecific)
+            Just ('p', t) -> either (\_ -> fail "Invalid base64") (return . PersistDbSpecific)
                            $ B64.decode $ TE.encodeUtf8 t
             Just ('s', t) -> return $ PersistText t
-            Just ('b', t) -> either (fail "Invalid base64") (return . PersistByteString)
+            Just ('b', t) -> either (\_ -> fail "Invalid base64") (return . PersistByteString)
                            $ B64.decode $ TE.encodeUtf8 t
             Just ('t', t) -> fmap PersistTimeOfDay $ readMay t
             Just ('u', t) -> fmap PersistUTCTime $ readMay t
@@ -415,7 +416,7 @@
       where
         headMay []    = Nothing
         headMay (x:_) = Just x
-        readMay :: (Read a, Monad m) => T.Text -> m a
+        readMay :: (Read a, Fail.MonadFail m) => T.Text -> m a
         readMay t =
             case reads $ T.unpack t of
                 (x, _):_ -> return x
