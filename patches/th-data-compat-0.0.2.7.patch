commit b6d1b9178dadba3253b261435c31ab9f4e7418a9
Author: Ryan Scott <ryan.gl.scott@gmail.com>
Date:   Sat Oct 27 21:41:28 2018 -0400

    Allow building with template-haskell-2.15.0.0

diff --git a/src/Language/Haskell/TH/Compat/Data/Current.hs b/src/Language/Haskell/TH/Compat/Data/Current.hs
index cdb8f09..838235b 100644
--- a/src/Language/Haskell/TH/Compat/Data/Current.hs
+++ b/src/Language/Haskell/TH/Compat/Data/Current.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 module Language.Haskell.TH.Compat.Data.Current (
   dataD', unDataD,
   newtypeD', unNewtypeD,
@@ -50,7 +51,11 @@ dataInstD' cxt n as cs ds = dataInstD cxt n as Nothing cs $ derivesFromNames ds
 
 -- | Compatible interface to destruct 'DataInstD'
 unDataInstD :: Dec -> Maybe (Cxt, Name, [Type], Maybe Kind, [Con], [Type])
-unDataInstD (DataInstD cxt n as mk cs ds) = Just (cxt, n, as, mk, cs, ds >>= unDerivClause)
+unDataInstD (DataInstD cxt n
+#if MIN_VERSION_template_haskell(2,15,0)
+                             _
+#endif
+                             as mk cs ds) = Just (cxt, n, as, mk, cs, ds >>= unDerivClause)
 unDataInstD  _                            = Nothing
 
 -- | Definition against 'newtypeInstD',
@@ -61,7 +66,11 @@ newtypeInstD' cxt n as c ds = newtypeInstD cxt n as Nothing c $ derivesFromNames
 
 -- | Compatible interface to destruct 'NewtypeInstD'
 unNewtypeInstD :: Dec -> Maybe (Cxt, Name, [Type], Maybe Kind, Con, [Type])
-unNewtypeInstD (NewtypeInstD cxt n as mk c ds) = Just (cxt, n, as, mk, c, ds >>= unDerivClause)
+unNewtypeInstD (NewtypeInstD cxt n
+#if MIN_VERSION_template_haskell(2,15,0)
+                                   _
+#endif
+                                   as mk c ds) = Just (cxt, n, as, mk, c, ds >>= unDerivClause)
 unNewtypeInstD  _                              = Nothing
 
 -- | Compatible interface to destruct 'InstanceD'
