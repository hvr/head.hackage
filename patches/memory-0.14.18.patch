commit d4241481d32fec2466a1a15572c1a65ea6ff1aca
Author: Ryan Scott <ryan.gl.scott@gmail.com>
Date:   Sat Mar 16 09:04:38 2019 -0400

    Adapt to base-4.13.0.0

diff --git a/Data/ByteArray/Parse.hs b/Data/ByteArray/Parse.hs
index 10b7c06..b0235a8 100644
--- a/Data/ByteArray/Parse.hs
+++ b/Data/ByteArray/Parse.hs
@@ -12,6 +12,7 @@
 -- > > parse ((,,) <$> take 2 <*> byte 0x20 <*> (bytes "abc" *> anyByte)) "xx abctest"
 -- > ParseOK "est" ("xx", 116)
 --
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE Rank2Types #-}
 {-# LANGUAGE BangPatterns #-}
 {-# LANGUAGE OverloadedStrings #-}
@@ -36,6 +37,7 @@ module Data.ByteArray.Parse
     ) where
 
 import           Control.Monad
+import qualified Control.Monad.Fail as Fail
 import           Foreign.Storable              (Storable, peek, sizeOf)
 import           Data.Word
 
@@ -84,10 +86,14 @@ instance Applicative (Parser byteArray) where
     pure      = return
     (<*>) d e = d >>= \b -> e >>= \a -> return (b a)
 instance Monad (Parser byteArray) where
-    fail errorMsg = Parser $ \buf err _ -> err buf ("Parser failed: " ++ errorMsg)
+#if !(MIN_VERSION_base(4,13,0))
+    fail          = Fail.fail
+#endif
     return v      = Parser $ \buf _ ok -> ok buf v
     m >>= k       = Parser $ \buf err ok ->
          runParser m buf err (\buf' a -> runParser (k a) buf' err ok)
+instance Fail.MonadFail (Parser byteArray) where
+    fail errorMsg = Parser $ \buf err _ -> err buf ("Parser failed: " ++ errorMsg)
 instance MonadPlus (Parser byteArray) where
     mzero = fail "MonadPlus.mzero"
     mplus f g = Parser $ \buf err ok ->
