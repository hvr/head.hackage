diff -ru sop-core-0.4.0.0.orig/src/Data/SOP/Sing.hs sop-core-0.4.0.0/src/Data/SOP/Sing.hs
--- sop-core-0.4.0.0.orig/src/Data/SOP/Sing.hs	2018-10-20 10:59:40.000000000 -0400
+++ sop-core-0.4.0.0/src/Data/SOP/Sing.hs	2019-03-09 15:08:10.192906208 -0500
@@ -1,4 +1,4 @@
-{-# LANGUAGE PolyKinds, StandaloneDeriving #-}
+{-# LANGUAGE CPP, PolyKinds, StandaloneDeriving #-}
 -- | Singleton types corresponding to type-level data structures.
 --
 -- The implementation is similar, but subtly different to that of the
@@ -92,8 +92,14 @@
 deriving instance Eq   (Shape xs)
 deriving instance Ord  (Shape xs)
 
+#if __GLASGOW_HASKELL__ >= 809
+# define KVS(kvs) kvs
+#else
+# define KVS(kvs)
+#endif
+
 -- | The shape of a type-level list.
-shape :: forall (xs :: [k]). SListI xs => Shape xs
+shape :: forall KVS(k) (xs :: [k]). SListI xs => Shape xs
 shape = case sList :: SList xs of
           SNil  -> ShapeNil
           SCons -> ShapeCons shape
@@ -102,7 +108,7 @@
 --
 -- @since 0.2
 --
-lengthSList :: forall (xs :: [k]) proxy. SListI xs => proxy xs -> Int
+lengthSList :: forall KVS(k) (xs :: [k]) proxy. SListI xs => proxy xs -> Int
 lengthSList _ = lengthShape (shape :: Shape xs)
   where
     lengthShape :: forall xs'. Shape xs' -> Int
